pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'hadhemiOmrani_5NIDS_G1', url: 'https://github.com/yesminezaghdene03/5NIDS1_G1_TPFOYER.git'
            }
        }
        stage('UNIT Testing') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('Integration Testing') {
            steps {
                sh 'mvn verify'
            }
        }
        
        stage('Maven Build') {
            steps {
                sh 'mvn clean install'
            }
        }

        stage('Code Coverage') {
            steps {
                jacoco()
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'sonar-api-key') {
                        sh 'mvn clean package sonar:sonar'
                    }
                }
            }
        }
        
        stage('Quality Gate Status') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-api-key'
                }
            }
        }

        // Ajouter les étapes OWASP Dependency-Check après SonarQube
        stage('OWASP Dependency-Check') {
            steps {
                script {
                    dependencyCheck additionalArguments: '--scan .', odcInstallation: 'DP-check'
                }
            }
        }
        
        stage('Archive Dependency-Check Report') {
            steps {
                script {
                    archiveArtifacts artifacts: 'dependency-check-report.xml', allowEmptyArchive: true
                }
            }
        }
        
        stage('Publish Dependency-Check Results') {
            steps {
                script {
                    dependencyCheckPublisher pattern: 'dependency-check-report.xml'
                }
            }
        }
    }
}
