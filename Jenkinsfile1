pipeline {
    agent any

    environment {
        // Définir les variables d'environnement si nécessaire
    }

    stages {
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Install Python3 Venv') {
            steps {
                script {
                    echo "Vérification de l'installation de python3-venv"
                    sh '''
                        dpkg -s python3-venv || sudo apt-get install -y python3-venv
                    '''
                }
            }
        }

        stage('Pre-commit Security Hooks') {
            steps {
                script {
                    echo "Vérification des hooks de sécurité pre-commit"
                    sh '''
                        echo "Installation de pre-commit dans un environnement virtuel..."
                        python3 -m venv venv
                        . venv/bin/activate  # Remplacer 'source' par '.'
                        pip install pre-commit
                        pre-commit install
                    '''
                }
            }
        }

        stage('Compile') {
            steps {
                echo "Compilation du projet"
                // Ajoute ici la commande pour compiler ton projet, par exemple :
                // sh './gradlew build' (si tu utilises Gradle)
            }
        }

        stage('JUnit/Mockito Tests') {
            steps {
                echo "Exécution des tests unitaires"
                // Ajoute ici la commande pour exécuter tes tests, par exemple :
                // sh './gradlew test' (si tu utilises Gradle)
            }
        }

        stage('Scan: SonarQube') {
            steps {
                echo "Scan du code avec SonarQube"
                // Ajoute ici la commande pour analyser le code avec SonarQube, par exemple :
                // sh './gradlew sonarqube' (si tu utilises Gradle)
            }
        }

        stage('Security Scan: Trufflehog') {
            steps {
                echo "Scan de sécurité avec Trufflehog"
                // Ajoute ici la commande pour exécuter Trufflehog, par exemple :
                // sh 'trufflehog --scan ./path/to/repo'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Construction de l'image Docker"
                // Ajoute ici la commande pour construire l'image Docker, par exemple :
                // sh 'docker build -t my-image .'
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                echo "Push de l'image Docker vers DockerHub"
                // Ajoute ici la commande pour pousser l'image Docker vers DockerHub, par exemple :
                // sh 'docker push my-image'
            }
        }

        stage('Run Docker Compose') {
            steps {
                echo "Exécution de Docker Compose"
                // Ajoute ici la commande pour exécuter Docker Compose, par exemple :
                // sh 'docker-compose up -d'
            }
        }

        stage('Deploy to Nexus') {
            steps {
                echo "Déploiement vers Nexus"
                // Ajoute ici la commande pour déployer vers Nexus, par exemple :
                // sh './gradlew deploy' (si tu utilises Gradle)
            }
        }

        stage('Post Actions') {
            steps {
                echo "Actions post-build"
                // Ajoute ici les actions à réaliser après le build, comme des notifications
            }
        }
    }

    post {
        success {
            echo "Pipeline terminé avec succès"
        }
        failure {
            echo "Le build a échoué"
        }
    }
}
