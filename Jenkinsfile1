pipeline {
    agent any

    environment {
        // Définir les variables d'environnement ici, si nécessaire
    }

    stages {
        stage('Verify Python Version') {
            steps {
                script {
                    // Vérifier la version de Python3 et son emplacement
                    sh 'python3 --version'
                    sh 'which python3'
                }
            }
        }

        stage('Install Python3') {
            steps {
                script {
                    // Installer Python3 si nécessaire
                    sh 'sudo apt-get update && sudo apt-get install -y python3 python3-pip'
                }
            }
        }

        stage('Pre-commit Security Hooks') {
            steps {
                script {
                    // Vérifier si Python3 est installé
                    def pythonInstalled = sh(script: 'command -v python3', returnStatus: true)
                    if (pythonInstalled != 0) {
                        echo 'Python3 n\'est pas installé, veuillez l\'installer avant de continuer.'
                        error('Python3 n\'est pas installé.')
                    }
                }
            }
        }

        stage('Compile Stage') {
            steps {
                // Ajouter les étapes de compilation ici, si nécessaire
            }
        }

        stage('JUnit/Mockito Tests') {
            steps {
                // Ajouter les étapes de tests ici
            }
        }

        stage('JaCoCo Report') {
            steps {
                // Ajouter les étapes de génération du rapport JaCoCo ici
            }
        }

        stage('Scan : SonarQube') {
            steps {
                // Ajouter l'analyse SonarQube ici
            }
        }

        stage('Security Scan: Nmap') {
            steps {
                // Ajouter l'analyse de sécurité Nmap ici
            }
        }

        stage('Security Scan: OWASP Dependency-Check') {
            steps {
                // Ajouter l'analyse OWASP Dependency-Check ici
            }
        }

        stage('Deploy to Nexus') {
            steps {
                // Ajouter les étapes de déploiement vers Nexus ici
            }
        }

        stage('Building image') {
            steps {
                // Ajouter les étapes de création de l'image Docker ici
            }
        }

        stage('Deploy image') {
            steps {
                // Ajouter les étapes de déploiement de l'image Docker ici
            }
        }

        stage('Docker compose') {
            steps {
                // Ajouter les étapes pour Docker Compose ici
            }
        }

        stage('Start Monitoring Containers') {
            steps {
                // Ajouter les étapes pour démarrer la surveillance des containers ici
            }
        }

        stage('Email Notification') {
            steps {
                script {
                    // Envoyer un email à l'adresse correcte
                    emailext (
                        subject: "Notification de Build Jenkins",
                        body: "Le build a échoué ou réussi. Consultez les logs pour plus de détails.",
                        to: "aminedridia9@gmail.com"
                    )
                }
            }
        }
    }

    post {
        always {
            // Action après chaque exécution, comme envoyer une notification d'email
            emailext (
                subject: "Notification de Build Jenkins",
                body: "Le build a échoué ou réussi. Consultez les logs pour plus de détails.",
                to: "aminedridia9@gmail.com"
            )
        }
    }
}
