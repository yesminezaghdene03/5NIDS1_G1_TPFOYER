pipeline {
    agent any

    tools {
        git 'Default' // Assurez-vous que 'Default' correspond à l'installation Git configurée dans Jenkins
        maven 'M2_Home' 
        jdk 'JAVA_HOME' 
    }

    environment {
        DOCKER_IMAGE_NAME = 'tp-foyer' // Nom de l'image Docker
        DOCKER_TAG = '5.0.0' // Tag de l'image Docker
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'YesminZaghden_NIDS1_G1', url: 'https://github.com/yesminezaghdene03/5NIDS1_G1_TPFOYER.git'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Package') {
            steps {
                sh 'mvn package'
            }
        }

        stage('Build Docker Image') { // Stage pour construire l'image Docker
            steps {
                script {
                    sh "docker build -t yesmin1/tp-foyer:5.0.0 ."
                }
            }
        }

        stage('Push Docker Image to DockerHub') { // Stage pour pousser l'image Docker dans Docker Hub
            steps {
                withCredentials([usernamePassword(credentialsId: 'Docker-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                        // Se connecter à Docker Hub avec les credentials Jenkins
                        sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                        // Pousser l'image dans Docker Hub
                        sh "docker push yesmin1/tp-foyer:5.0.0"
                    }
                }
            }
        }

        stage('Run Docker Compose') { // Stage pour déployer avec Docker Compose
            steps {
                script {
                    sh '''
                        sudo docker-compose down 
                        sudo docker-compose up -d
                    '''
                }
            }
        }

        stage('Start Prometheus') {
            steps {
                script {
                    sh 'docker start prometheus'
                }
            }
        }

        stage('Start Grafana') {
            steps {
                script {
                    sh 'docker start grafana'
                }
            }
        }
    }

    post {
        always {
            emailext(
                subject: "Build de ${env.JOB_NAME} #${env.BUILD_NUMBER} - ${currentBuild.result}",
                body: """<p>Bonjour,</p>
                         <p>Le build <b>#${env.BUILD_NUMBER}</b> du job <b>${env.JOB_NAME}</b> est terminé avec le statut <b>${currentBuild.result}</b>.</p>
                         <p>Cliquez <a href="${env.BUILD_URL}">ici</a> pour voir les détails du build.</p>""",
                to: 'aminedridia9@gmail.com'
            )
        }
    }
}
