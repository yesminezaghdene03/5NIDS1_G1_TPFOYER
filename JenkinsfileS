pipeline {
    agent any

    tools {
        git 'Default'
        maven 'M2_HOME'
        jdk 'JAVA_HOME'
    }

    environment {
        DOCKER_IMAGE_NAME = 'tp-foyer'
        DOCKER_TAG = '5.0.0'
        PATH = "$PATH:/home/vagrant/.local/bin:/usr/local/bin" // Ajout du chemin de Trivy
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'YesminZaghden_NIDS1_G1', url: 'https://github.com/yesminezaghdene03/5NIDS1_G1_TPFOYER.git'
            }
        }

        stage('Install Pre-Commit') {
            steps {
                sh 'pip install --user pre-commit'
            }
        }

        stage('Run Pre-Commit Hooks') {
            steps {
                sh 'pre-commit run --all-files'
            }
        }

        stage('Verify Changes') {
            steps {
                sh 'git status'
            }
        }

        stage('Docker Build') { // Construction de l'image Docker
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} ."
                }
            }
        }

        stage('Security Scan') { // Scan de sécurité
            steps {
                sh 'trivy image ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} || echo "Security scan failed. Review required."'
            }
        }

        stage('Acceptance Tests') {
            steps {
                // Lancer tous les tests unitaires existants
                sh 'mvn test || echo "Acceptance tests failed. Review required."'
            }
        }

        stage('Manual Review') { // Revue manuelle
            steps {
                echo 'Manual review required before production deployment'
            }
        }

        stage('Deploy') { // Déploiement avec Docker Compose
            steps {
                script {
                    sh "docker-compose up -d"
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully. Ready for production.'
        }
        failure {
            echo 'Pipeline failed. Resolve issues before production deployment.'
        }
    }
}
