version: '3.8'

services:
  app:
    build:
      context: .  # Utilise le Dockerfile dans le répertoire courant
      dockerfile: Dockerfile
    ports:
      - "8089:8089"  # Expose le port 8089 de l'application
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://db:3306/db?createDatabaseIfNotExist=true"
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""  # Mot de passe MySQL vide
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - db

  db:
    image: mysql:latest
    ports:
      - "3306:3306"  # Expose le port MySQL
    environment:
      MYSQL_ROOT_PASSWORD: ""  # Définit un mot de passe root vide pour MySQL
      MYSQL_DATABASE: db  # Crée une base de données nommée 'db' au démarrage
    volumes:
      - db_data:/var/lib/mysql  # Garde les données persistantes de la base

prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"  # Expose le port de Prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Monte la configuration de Prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"  # Spécifie le fichier de configuration
    networks:
      - monitoring

grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"  # Expose le port de Grafana
    volumes:
      - grafana_data:/var/lib/grafana  # Garde les données persistantes de Grafana
    depends_on:
      - prometheus  # Attendre que Prometheus soit prêt avant de démarrer
    networks:
      - monitoring

volumes:
  db_data:  # Volume pour les données MySQL
  grafana_data:  # Volume pour les données Grafana

networks:
  monitoring:
    driver: bridge